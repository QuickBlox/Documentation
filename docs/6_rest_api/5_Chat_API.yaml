swagger: '2.0'
info:
  title: QuickBlox REST API, Chat API.
  description: |
    QuickBlox Chat is a quick and reliable chat solution which combines benefits of scalable cloud hosted XMPP chat server,
    seamless Single Sign-On authorization via [Users](/rest_api/Users_API.html), incoming IM / chat alerts via [Push Notifications](/rest_api/Push_Notifications_API.html) and file attachments via [Content](/rest_api/Content_API.html).
    <br><br>
    Chat REST API provides an access to Chat history.
    We operate with 2 models: Chat Dialogs and Chat Messages.
  version: 1.0
# the domain of the service
host: quickblox.com
# array of all schemes that QuickBlox API supports
schemes:
  - https
basePath: /api
produces:
  - application/json
paths:
  /chat/Dialog.json:
    post:
      summary: Create dialog
      operationId: 101_Create_Dialog
      description: |
        Create chat dialog.
        There are 3 types of chat dialogs:
        * Use **type=1** (PUBLIC_GROUP) to create a public group dialog. All the users from your application will be able to join it. Server will create a public group chat and return a detailed information about newly created dialog. Field **xmpp_room_jid** will contain a Chat room JID to which you should join to start chatting.
        * Use **type=2** (GROUP) to create a group dialog only for specific users provided in **occupants_ids**. Server will create an only members group chat and return a detailed information about newly created dialog. Field **xmpp_room_jid** will contain a Chat room JID to which you should join to start chatting.
        * Use **type=3** (PRIVATE) to create a private dialog between 2 users. Server will return a detailed information about newly created dialog. If user sends a chat message to some user and private dialog wasn't created - it will be created automatically with 1st chat message.
      parameters:
        - name: type
          in: formData
          description: |
            Type of chat dialog.
            Allowed values: **1** (PUBLIC_GROUP), **2** (GROUP), **3** (PRIVATE).
          required: true
          type: integer
          default: 2
        - name: occupants_ids
          in: formData
          description: |
            Users' IDs who will be able to chat in this dialog. Don't need to pass current user ID - it will be added automatically.
            Required if **type=2** (GROUP) or **type=3** (PRIVATE).
          required: false
          type: array
          items:
            type: integer
          default: 56,558,12
        - name: name
          in: formData
          description: |
            Name of chat dialog.
            Required if **type=2** (GROUP) or **type=1** (PUBLIC_GROUP).
          required: false
          type: string
          default: Chat with Bob, Sam, Garry
        - name: photo
          in: formData
          description: |
            A link to chat dialog's photo (image id, url whatever)
          required: false
          type: string
          default: 67834
      responses:
        '201':
          description: "Chat dialog object"
          schema:
            $ref: '#/definitions/DialogObject'
    get:
      summary: Retrieve dialogs
      operationId: 102_Retrieve_Dialogs
      description: |
        Retrieve all dialogs associated with current user.
        Server will return all dialogs where current user id is in **occupants_ids** field OR if **type=1** (PUBLIC_GROUP).
      parameters:
        - name: '{field_name}'
          in: formData
          description: |
            Search records with field which contains exactly specified value.
            Applied fields - **_id**, **type**, **name**, **last_message_date_sent**, **created_at**, **updated_at**.
          required: false
          type: string
          default: type=2
        - name: '{field_name}[{search_operator}]'
          in: formData
          description: |
            Search records with field which contains value according to specified value and operator.
            Possible filters - **lt** (Less Than operator), **lte** (Less Than or Equal to operator), **gt** (Greater Than operator), **gte** (Greater Than or Equal to operator), **ne** (Not Equal to operator), **in** (Contained IN array operator), **nin** (Not contained IN array), **all** (ALL contained IN array), **ctn** (Contains substring operator).
            Applied fields - **_id**, **type**, **name**, **last_message_date_sent**, **created_at**, **updated_at**.
          required: false
          type: string
          default: type[in]=1,2
      responses:
        '200':
          description: "Array of chat dialogs"
          schema:
            $ref: '#/definitions/DialogsResponse'
  /chat/Dialog/{dialog_id}.json:
    delete:
      summary: Delete dialog
      operationId: 103_Delete_Dialog
      description: |
        Delete chat dialog.
      parameters:
        - name: dialog_id
          in: formData
          description: |
            The id of chat dialog to delete (path parameter)
          required: true
          type: string
          default: 53aabe15e4b077ddd43e7fd6
      responses:
        '200':
          description: "Empty body"
  /chat/Dialog/{dialog_ids}.json:
    delete:
      summary: Delete dialogs
      operationId: 104_Delete_Dialogs
      description: |
        Delete multiple chat dialogs.
      parameters:
        - name: dialog_ids
          in: formData
          description: |
            The ids of chat dialogs to delete (path parameter)
          required: true
          type: array
          items:
            type: string
          default: 53aabe15e4b077ddd43e7fd6,23aabe15e4b077ddd43e7fd1
      responses:
        '200':
          description: "Delete dialogs response"
          schema:
            $ref: '#/definitions/DeleteDialogsResponse'
definitions:
  DialogsResponse:
    type: object
    properties:
      limit:
        type: integer
        example: 10
      skip:
        type: integer
        example: 10
      total_entries:
        type: integer
        example: 30
      items:
        type: array
        items:
          $ref: '#/definitions/DialogObject'
  DialogObject:
    type: object
    properties:
      _id:
        type: string
        example: 53aaa06f535c12cea9007496
      created_at:
        type: string
        example: 2016-03-23T17:00:42Z
      updated_at:
        type: string
        example: 2016-03-23T17:00:42Z
      type:
        type: integer
        example: 2
      occupants_ids:
        type: array
        items:
          type: integer
          example: 56
      unread_messages_count:
        type: integer
        example: 5
      last_message:
        type: string
        example: How is going?
      last_message_date_sent:
        type: integer
        example: 1492592179
      last_message_user_id:
        type: integer
        example: 56
      name:
        type: string
        example: Chat with Bob, Sam, Garry
      photo:
        type: string
        example: 53aaa06f535c12cea9007423
      xmpp_room_jid:
        type: string
        example: 92_53aaa06f535c12cea9007496@muc.chat.quickblox.com
      user_id:
        type: integer
        example: 56
  DeleteDialogsResponse:
    type: object
    properties:
      SuccessfullyDeleted:
        type: object
        properties:
          ids:
            type: array
            items:
              type: string
              example: 536fbe15123127d63d43e7fe4
      WrongPermissions:
        type: object
        properties:
          ids:
            type: array
            items:
              type: string
              example: 53efbe15e4b077d33d43e7fd2
      NotFound:
        type: object
        properties:
          ids:
            type: array
            items:
              type: string
              example: 53afbe15e4b077ddd43e7fd5
  MessagesResponse:
    type: object
    properties:
      limit:
        type: integer
        example: 10
      skip:
        type: integer
        example: 10
      items:
        type: array
        items:
          $ref: '#/definitions/MessageObject'
  MessageObject:
    type: object
    properties:
      _id:
        type: string
        example: 53aaa06f535c12cea9007496
      created_at:
        type: string
        example: 2016-03-23T17:00:42Z
      updated_at:
        type: string
        example: 2016-03-23T17:00:42Z
      chat_dialog_id:
        type: string
        example: 43aaa06f535812cea9007496
      message:
        type: string
        example: How is going?
      date_sent:
        type: integer
        example: 1492592179
      sender_id:
        type: integer
        example: 56
      recipient_id:
        type: integer
        example: 56
      delivered_ids:
        type: array
        items:
          type: integer
          example: 56
      read_ids:
        type: array
        items:
          type: integer
          example: 56
      attachments:
        type: array
        items:
          $ref: '#/definitions/MessageAttachmentObject'
  MessageAttachmentObject:
    type: object
    properties:
      type:
        type: string
        example: video
      id:
        type: string
        example: 47863
      url:
        type: string
        example: http://jabber.org/avatar.jpg
