swagger: '2.0'
info:
  title: QuickBlox REST API, CustomObjects API.
  description: |
    Custom Objects module provides flexibility to define any data structure(schema) you need.
    Schema is defined in [QuickBlox Administration Panel](https://admin.quickblox.com).
    The schema is called **Class** and contains field names and their types.
    <br><br>
    Available types are:<br><br>
    • **Integer**<br>
    • **String**<br>
    • **Float**<br>
    • **Boolean**<br>
    • **Array**<br>
    • **File**<br>
    • **Location** (array with 2 elements: longitude, latitude)<br>
    • **Date**<br>
    <br>
    To start use Custom Objects module you should create your data schema.
    Go to [QuickBlox Administration Panel](https://admin.quickblox.com),
      Custom Objects module page and press 'Add new class' button.
      'Add new class' popup will appear. Enter Class name, add any fields you want.
      Press 'Create class' button - new class will be created.
    <br>
    <br>
    There are some predefined fields:<br><br>
    • **_id** - String (Record ID).<br>
    • **created_at** - Integer (contains Unix timestamp - date & time when record was created, filled automatically).<br>
    • **updated_at** - Integer (contains Unix timestamp - date & time when record was updated, filled automatically).<br>
    • **user_id** - Integer (contains API User ID, which created current record).<br>
    • **_parent_id** - String (parent object's ID) - for cascade deletion. <br>
  version: 1.0
# the domain of the service
host: quickblox.com
# array of all schemes that QuickBlox API supports
schemes:
  - https
basePath: /api
produces:
  - application/json
paths:
  /data/{class_name}.json:
    post:
      summary: Create object
      operationId: 101_Create_object
      description: |
        Create new custom object.
      parameters:
        - name: class_name
          in: formData
          description: A class name to which a new object belongs (path parameter).
          required: true
          type: string
          default: MyScoreTable
        - name: '<fieldName1>'
          in: formData
          description: |
            Custom field name and its value.
          required: false
          type: string
          default: rating=1024
      responses:
        '201':
          description: "An object"
          schema:
            $ref: '#/definitions/CustomObject'
    get:
      summary: Retrieve objects
      operationId: 102_Retrieve_objects
      description: |
        Search for records of particular class.
      parameters:
        - name: class_name
          in: formData
          description: A class name of objects to retrieve (path parameter).
          required: true
          type: string
          default: MyScoreTable
        - name: '{field_name}'
          in: formData
          description: Search records with field which contains exactly specified value.
          required: false
          type: string
          default: rating=2
        - name: '{field_name}[lt]'
          in: formData
          description: |
            **Search operator.**
            Search record with field which contains value **L**ess **T**han specified value.
          required: false
          type: string
          default: rating[lt]=4
        - name: '{field_name}[lte]'
          in: formData
          description: |
            **Search operator.**
            Search record with field which contains value **L**ess **T**han or **E**qual to specified value.
          required: false
          type: string
          default: rating[lte]=4
        - name: '{field_name}[gt]'
          in: formData
          description: |
            **Search operator.**
            Search record with field which contains value **G**reater **T**han specified value.
          required: false
          type: string
          default: rating[gt]=7
        - name: '{field_name}[gte]'
          in: formData
          description: |
            **Search operator.**
            Search record with field which contains value **G**reater **T**han or **E**qual to specified value.
          required: false
          type: string
          default: rating[gte]=7
        - name: '{field_name}[ne]'
          in: formData
          description: |
            **Search operator.**
            Search record with field which contains value **N**ot **E**qual to specified value.
          required: false
          type: string
          default: rating[ne]=100
        - name: '{field_name}[in]'
          in: formData
          description: |
            **Search operator.**
            Search record with field which contains specified values **IN** array.
          required: false
          type: string
          default: game_mode_name[in]=deathmatch,rage
        - name: '{field_name}[nin]'
          in: formData
          description: |
            **Search operator.**
            Search record with field which **N**ot contains specified values **IN** array.
          required: false
          type: string
          default: game_mode_name[nin]=survivor,crazy_nightmare
        - name: '{field_name}[all]'
          in: formData
          description: |
            **Search operator.**
            Search record with field which contains **ALL** specified values **IN** array.
          required: false
          type: string
          default: game_mode_name[all]=survivor,crazy
        - name: '{field_name}[or]'
          in: formData
          description: |
            **Search operator.**
            Search record with field value using **OR** operator.
            1. Will return records with name **sam** or **igor**.
            2. Will return records with name **sam** or lastname **johnson**
          required: false
          type: string
          default: 1. name[or]=sam,igor. 2. name[or]=sam&lastname[or]=johnson
        - name: '{field_name}[ctn]'
          in: formData
          description: |
            **Search operator.**
            Search record with field which **C**ontains specified substring values.
          required: false
          type: string
          default: username[ctn]=son
        - name: sort_asc
          in: formData
          description: Search results will be sorted by specified field in ascending order.
          required: false
          type: string
          default: sort_asc=field_name
        - name: sort_desc
          in: formData
          description: Search results will be sorted by specified field in descending order.
          required: false
          type: string
          default: sort_desc=field_name
        - name: skip
          in: formData
          description: |
            Skip N records in search results.
            Useful for pagination. Default (if not specified) - 0.
          required: false
          type: integer
          default: 100
        - name: limit
          in: formData
          description: |
            Limit search results to N records.
            Useful for pagination. Default and max values - 100.
            If limit is equal to -1 only last record will be returned
          required: false
          type: integer
          default: 100
        - name: count
          in: formData
          description: Count search results. Response will contain only count of records found.
          required: false
          type: integer
          default: 1
        - name: output[include]
          in: formData
          description: |
            output[include] specifies the fields to include from the result set.
            The _id field is, by default, included in the result set.
            To exclude the _id field from the result set, you need to specify
            in the output[exclude] value the exclusion of the _id field.
          required: false
          type: string
          default: output[include]=field_name1,field_name2
        - name: output[exclude]
          in: formData
          description: |
            output[exclude] specifies the fields to exclude from the result set.
          required: false
          type: string
          default: output[exclude]=field_name1,field_name2
        - name: near
          in: formData
          description: |
            Search records in a specific radius with current position
            in meters. Format - field_name[near]=longitude,latitude;radius
          required: false
          type: string
          default: user_location[near]=25.32,44.551;1000
        - name: group_by
          in: formData
          description: |
            **Aggregation operator**.
            It works similar to [https://www.w3schools.com/sql/sql_groupby.asp](SQL GROUP BY) operator,
            should be used with **calc** operator (below).
          required: false
          type: string
          default: group_by=game_mode_name
        - name: '{field_name}[calc]={operator}'
          in: formData
          description: |
            **Aggregation operator**.
            The **avg, min, max, sum** can be used with **group_by** operator.
          required: false
          type: string
          default: rating[calc]=min
      responses:
        '200':
          description: "An array of objects"
          schema:
            $ref: '#/definitions/ArrayOfCustomObjectsResponse'
  /data/{class_name}/{id1,id2}.json:
    get:
      summary: Retrieve objects by IDs
      operationId: 103_Retrieve_objects_by_IDs
      description: |
        Retrieve object by IDs of particular class.
      parameters:
        - name: class_name
          in: formData
          description: A class name of objects to retrieve (path parameter).
          required: true
          type: string
          default: MyScoreTable
        - name: "id1,id2"
          in: formData
          description: An array of objects' ids to retrieve (path parameter).
          required: true
          type: array
          default: "51c9a...32d6,51c9a...32dd"
      responses:
        '200':
          description: "An array of objects"
          schema:
            $ref: '#/definitions/ArrayOfCustomObjectsResponse'
definitions:
  ArrayOfCustomObjectsResponse:
    type: object
    properties:
      class_name:
        type: string
        example: MyScoreTable
      skip:
        type: integer
        example: 10
      limit:
        type: integer
        example: 100
      items:
        type: array
        items:
          $ref: '#/definitions/CustomObject'
  CustomObject:
    type: object
    properties:
      _id:
        type: string
        example: 53aaa06f535c12cea9007496
      created_at:
        type: integer
        example: 1345448268
      updated_at:
        type: integer
        example: 1345448268
      user_id:
        type: integer
        example: 57883
      _parent_id:
        type: string
        example: 53aaa06f535c12cea9007496
      rating:
        type: integer
        example: 1024
