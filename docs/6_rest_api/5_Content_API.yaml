swagger: '2.0'
info:
  title: QuickBlox REST API, Content API.
  description: |
    The Users APIs manage all things related to user accounts handling, authentication, account data, password reminding etc:<br>
      - OAuth is secure and supports transparent authentication<br>
      - Logging in users with their Facebook/Twitter/Twitter Digits accounts is available<br>
      - User tags – set up user tags and address them separately in your app or through the admin panel – supported by other modules such as Push Notifications<br>
      - Existing user base integration – our module supports connection to your system by storing your existent IDs table and matching them to new ones.
  version: 1.0
# the domain of the service
host: quickblox.com
# array of all schemes that QuickBlox API supports
schemes:
  - https
basePath: /api
produces:
  - application/json
paths:
  /users.json:
    post:
      summary: Create file
      operationId: Users_1
      description: |
        Registers a new app user.
        Call this API to register a user for the app. You must provide either a user **login** or **email** address along with their **passwor**, passing both email address and login is permitted but not required.
        You can ask QuickBlox to verify user email addresses (require email confirmation) in your application settings page in [Dashboard](https://admin.quickblox.com).
        Also you can setup custom email templates and pages for **Users greetings**, **Reset password** and **Email confirmation** features.
      parameters:
        - name: user[login]
          in: formData
          description: The user's login name
          required: true
          type: String
          default: samuelrulez
        - name: user[password]
          in: formData
          description: The user's password for this app
          required: true
          type: string
          default: WzRAY9vrGmb6FfP
        - name: user[email]
          in: formData
          description: The user's email address
          required: true
          type: string
          default: awesome@domain.com
        - name: user[full_name]
          in: formData
          description: The user's full name
          required: false
          type: string
          default: Captain Jack
        - name: user[phone]
          in: formData
          description: The user's telephone number
          required: false
          type: string
          default: 4487556488
        - name: user[website]
          in: formData
          description: The user's web address, or other url
          required: false
          type: string
          default: https://quickblox.com
        - name: user[facebook_id]
          in: formData
          description: The user's facebook uid
          required: false
          type: string
          default: 100000883956766
        - name: user[twitter_id]
          in: formData
          description: The user's twitter uid
          required: false
          type: string
          default: 23434883956766
        - name: user[twitter_digits_id]
          in: formData
          description: The user's twitter digits uid
          required: false
          type: string
          default: 67434863956765
        - name: user[blob_id]
          in: formData
          description: The id of an assoicated blob for this user, for example their photo
          required: false
          type: integer
          default: 12312412
        - name: user[external_user_id]
          in: formData
          description: An uid that represents the user in an external user registry
          required: false
          type: string
          default: 21445
        - name: user[tag_list]
          in: formData
          description: A comma seperated list of tags associated with the user. Set up user tags and address them separately in your app.
          required: false
          type: string
          default: man,car,mac
        - name: user[custom_data]
          in: formData
          description: The user's additional info
          required: false
          type: string
          default: age=34&lang=en
      responses:
        '201':
          description: "User object"
          schema:
            $ref: '#/definitions/UserResponse'
definitions:
  UserResponse:
    properties:
      user:
        $ref: '#/definitions/UserObject'
  UserObject:
    properties:
      id:
        type: integer
        example: 1639
      full_name:
        type: string
        example: John doe
      login:
        type: string
        example: samuelrulez
      phone:
        type: string
        example: 8765554351
      website:
        type: string
        example: https://quickblox.com
      created_at:
        type: string
        example: 2012-05-09T10:24:26Z
      updated_at:
        type: string
        example: 2012-05-09T10:24:26Z
      last_request_at:
        type: string
        example: 2012-05-09T10:24:26Z
      facebook_id:
        type: string
        example: 100000883956766
      twitter_id:
        type: string
        example: 23434883956766
      twitter_digits_id:
        type: string
        example: 67434863956765
      external_user_id:
        type: string
        example: 12334
      blob_id:
        type: integer
        example: 234435
      custom_data:
        type: string
        example: age=34&lang=en
      user_tags:
        type: string
        example: man,car
